{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\shrav\\\\Downloads\\\\defi-staking-app-starter-main\\\\defi-staking-app-starter\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\shrav\\\\Downloads\\\\defi-staking-app-starter-main\\\\defi-staking-app-starter\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"C:\\\\Users\\\\shrav\\\\Downloads\\\\defi-staking-app-starter-main\\\\defi-staking-app-starter\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\shrav\\\\Downloads\\\\defi-staking-app-starter-main\\\\defi-staking-app-starter\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\shrav\\\\Downloads\\\\defi-staking-app-starter-main\\\\defi-staking-app-starter\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _createClass from \"C:\\\\Users\\\\shrav\\\\Downloads\\\\defi-staking-app-starter-main\\\\defi-staking-app-starter\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _inherits from \"C:\\\\Users\\\\shrav\\\\Downloads\\\\defi-staking-app-starter-main\\\\defi-staking-app-starter\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\shrav\\\\Downloads\\\\defi-staking-app-starter-main\\\\defi-staking-app-starter\\\\src\\\\components\\\\App.js\";\nimport React, { Component } from \"react\";\nimport './App.css';\nimport Navbar from './Navbar';\nimport Web3 from 'web3';\nimport Tether from '../truffle_abis/Tether.json';\nimport RwD from '../truffle_abis/rwd.json';\nimport DecentralBank from '../truffle_abis/DecentralBank.json';\nimport Main from './Main.js';\nimport ParticleSettings from './ParticleSettings.js';\n\nvar App = /*#__PURE__*/function (_Component) {\n  _inherits(App, _Component);\n\n  _createClass(App, [{\n    key: \"UNSAFE_componentWillMount\",\n    value: function () {\n      var _UNSAFE_componentWillMount = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return this.loadWeb3();\n\n              case 2:\n                _context.next = 4;\n                return this.loadBloackchainData();\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function UNSAFE_componentWillMount() {\n        return _UNSAFE_componentWillMount.apply(this, arguments);\n      }\n\n      return UNSAFE_componentWillMount;\n    }()\n  }, {\n    key: \"loadWeb3\",\n    value: function () {\n      var _loadWeb = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                if (!window.ethereum) {\n                  _context2.next = 6;\n                  break;\n                }\n\n                window.web3 = new Web3(window.ethereum);\n                _context2.next = 4;\n                return window.ethereum.enable();\n\n              case 4:\n                _context2.next = 7;\n                break;\n\n              case 6:\n                if (window.web3) {\n                  window.web3 = new Web3(window.web3.currentProvider);\n                } else {\n                  window.alert('No ethereum browser detected');\n                }\n\n              case 7:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      function loadWeb3() {\n        return _loadWeb.apply(this, arguments);\n      }\n\n      return loadWeb3;\n    }()\n  }, {\n    key: \"loadBloackchainData\",\n    value: function () {\n      var _loadBloackchainData = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n        var web3, account, networkId, tetherData, tether, tetherBalance, rwdData, rwd, rwdBalance, decentralBankData, decentralBank, stakingBalance;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                web3 = window.web3;\n                _context3.next = 3;\n                return web3.eth.getAccounts();\n\n              case 3:\n                account = _context3.sent;\n                this.setState({\n                  account: account[0]\n                });\n                _context3.next = 7;\n                return web3.eth.net.getId();\n\n              case 7:\n                networkId = _context3.sent;\n                //Load Tether Contract\n                tetherData = Tether.networks[networkId];\n                console.log(tetherData);\n\n                if (!tetherData) {\n                  _context3.next = 20;\n                  break;\n                }\n\n                tether = new web3.eth.Contract(Tether.abi, tetherData.address);\n                this.setState({\n                  tether: tether\n                });\n                _context3.next = 15;\n                return tether.methods.balanceOf(this.state.account).call();\n\n              case 15:\n                tetherBalance = _context3.sent;\n                this.setState({\n                  tetherBalance: tetherBalance.toString()\n                });\n                console.log({\n                  balance: tetherBalance\n                });\n                _context3.next = 21;\n                break;\n\n              case 20:\n                window.alert('Error! Tether contract not deployed - no detected network');\n\n              case 21:\n                //Load RwD contract\n                rwdData = RwD.networks[networkId];\n                console.log(rwdData);\n\n                if (!rwdData) {\n                  _context3.next = 33;\n                  break;\n                }\n\n                rwd = new web3.eth.Contract(RwD.abi, rwdData.address);\n                this.setState({\n                  rwd: rwd\n                });\n                _context3.next = 28;\n                return rwd.methods.balanceOf(this.state.account).call();\n\n              case 28:\n                rwdBalance = _context3.sent;\n                this.setState({\n                  rwdBalance: rwdBalance.toString()\n                });\n                console.log({\n                  balance: rwdBalance\n                });\n                _context3.next = 34;\n                break;\n\n              case 33:\n                window.alert('Error! Reward contract not deployed - no detected network');\n\n              case 34:\n                //Load DecentralBank contract\n                decentralBankData = DecentralBank.networks[networkId];\n                console.log(rwdData);\n\n                if (!tetherData) {\n                  _context3.next = 46;\n                  break;\n                }\n\n                decentralBank = new web3.eth.Contract(DecentralBank.abi, decentralBankData.address);\n                this.setState({\n                  decentralBank: decentralBank\n                });\n                _context3.next = 41;\n                return decentralBank.methods.stakingBalance(this.state.account).call();\n\n              case 41:\n                stakingBalance = _context3.sent;\n                this.setState({\n                  stakingBalance: stakingBalance.toString()\n                });\n                console.log({\n                  balance: stakingBalance\n                });\n                _context3.next = 47;\n                break;\n\n              case 46:\n                window.alert('Error! DecntralBank contract not deployed - no detected network');\n\n              case 47:\n                this.setState({\n                  loading: false\n                });\n\n              case 48:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function loadBloackchainData() {\n        return _loadBloackchainData.apply(this, arguments);\n      }\n\n      return loadBloackchainData;\n    }() //two functions one that stakes and one unstakes\n    //leverage our decentralBank contract -deposit tokens and unstaking tokens\n    //DepositTokens\n    //function approve transaction hash\n\n  }]);\n\n  //Our React Code Goes in here!\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n\n    _this.stakeTokens = function (amount) {\n      _this.setState({\n        loading: true\n      });\n\n      _this.state.tether.methods.approve(_this.state.decentralBank._address, amount).send({\n        from: _this.state.account\n      }).on('transactionHash', function (hash) {\n        _this.state.decentralBank.methods.depositTokens(amount).send({\n          from: _this.state.account\n        }).on('transactionHash', function (hash) {\n          _this.setState({\n            loading: false\n          });\n        });\n      });\n    };\n\n    _this.unStakeTokens = function (amount) {\n      _this.setState({\n        loading: true\n      });\n\n      _this.state.decentralBank.methods.unstakeTokens().send({\n        from: _this.state.account\n      }).on('transactionHash', function (hash) {\n        _this.setState({\n          loading: false\n        });\n      });\n    };\n\n    _this.state = {\n      account: '0x0',\n      tether: {},\n      rwd: {},\n      decentralBank: {},\n      tetherBalance: '0',\n      rwdBalance: '0',\n      stakingBalance: '0',\n      loading: 'true'\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      var content;\n      {\n        this.state.loading ? content = /*#__PURE__*/React.createElement(\"p\", {\n          id: \"loader\",\n          className: \"text-center\",\n          style: {\n            margin: '30px'\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 44\n          }\n        }, \"LOADING.....\") : content = /*#__PURE__*/React.createElement(Main, {\n          tetherBalance: this.state.tetherBalance,\n          rwdBalance: this.state.rwdBalance,\n          stakingBalance: this.state.stakingBalance,\n          stakeTokens: this.stakeTokens,\n          unstakeTokens: this.unStakeTokens,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 17\n          }\n        });\n      }\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"App\",\n        style: {\n          position: 'relative'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          position: 'absolute'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(ParticleSettings, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 21\n        }\n      })), /*#__PURE__*/React.createElement(Navbar, {\n        account: this.state.account,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"container-fluid mt-5\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"main\", {\n        role: \"main\",\n        classname: \"col-lg-12 ml-auto mr-auto\",\n        style: {\n          maxWidth: '600px',\n          minheight: '100vm'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"container-fluid margin-auto\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 29\n        }\n      }, content)))));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["C:/Users/shrav/Downloads/defi-staking-app-starter-main/defi-staking-app-starter/src/components/App.js"],"names":["React","Component","Navbar","Web3","Tether","RwD","DecentralBank","Main","ParticleSettings","App","loadWeb3","loadBloackchainData","window","ethereum","web3","enable","currentProvider","alert","eth","getAccounts","account","setState","net","getId","networkId","tetherData","networks","console","log","tether","Contract","abi","address","methods","balanceOf","state","call","tetherBalance","toString","balance","rwdData","rwd","rwdBalance","decentralBankData","decentralBank","stakingBalance","loading","props","stakeTokens","amount","approve","_address","send","from","on","hash","depositTokens","unStakeTokens","unstakeTokens","content","margin","position","maxWidth","minheight"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport './App.css';\r\nimport Navbar from './Navbar'\r\nimport Web3 from 'web3';\r\nimport Tether from '../truffle_abis/Tether.json'\r\nimport RwD from '../truffle_abis/rwd.json'\r\nimport DecentralBank from '../truffle_abis/DecentralBank.json'\r\nimport Main from './Main.js'\r\nimport ParticleSettings from './ParticleSettings.js'\r\nclass App extends Component {\r\n\r\n    async UNSAFE_componentWillMount() {\r\n        await this.loadWeb3()\r\n        await this.loadBloackchainData();\r\n    }\r\n\r\n    async loadWeb3() {\r\n        if (window.ethereum) {\r\n            window.web3 = new Web3(window.ethereum);\r\n            await window.ethereum.enable()\r\n        }\r\n        else if (window.web3) {\r\n            window.web3 = new Web3(window.web3.currentProvider)\r\n        }\r\n        else {\r\n            window.alert('No ethereum browser detected')\r\n        }\r\n    }\r\n\r\n    async loadBloackchainData() {\r\n        const web3 = window.web3\r\n        const account = await web3.eth.getAccounts()\r\n        this.setState({ account: account[0] })\r\n        const networkId = await web3.eth.net.getId()\r\n        //Load Tether Contract\r\n        const tetherData = Tether.networks[networkId]\r\n        console.log(tetherData)\r\n        if (tetherData) {\r\n            const tether = new web3.eth.Contract(Tether.abi, tetherData.address)\r\n            this.setState({ tether })\r\n            let tetherBalance = await tether.methods.balanceOf(this.state.account).call()\r\n            this.setState({ tetherBalance: tetherBalance.toString() })\r\n            console.log({ balance: tetherBalance })\r\n        }\r\n        else {\r\n            window.alert('Error! Tether contract not deployed - no detected network')\r\n        }\r\n\r\n        //Load RwD contract\r\n        const rwdData = RwD.networks[networkId]\r\n        console.log(rwdData)\r\n        if (rwdData) {\r\n            const rwd = new web3.eth.Contract(RwD.abi, rwdData.address)\r\n            this.setState({ rwd })\r\n            let rwdBalance = await rwd.methods.balanceOf(this.state.account).call()\r\n            this.setState({ rwdBalance: rwdBalance.toString() })\r\n            console.log({ balance: rwdBalance })\r\n        }\r\n        else {\r\n            window.alert('Error! Reward contract not deployed - no detected network')\r\n        }\r\n\r\n        //Load DecentralBank contract\r\n        const decentralBankData = DecentralBank.networks[networkId]\r\n        console.log(rwdData)\r\n        if (tetherData) {\r\n            const decentralBank = new web3.eth.Contract(DecentralBank.abi, decentralBankData.address)\r\n            this.setState({ decentralBank })\r\n            let stakingBalance = await decentralBank.methods.stakingBalance(this.state.account).call()\r\n            this.setState({ stakingBalance: stakingBalance.toString() })\r\n            console.log({ balance: stakingBalance })\r\n        }\r\n        else {\r\n            window.alert('Error! DecntralBank contract not deployed - no detected network')\r\n        }\r\n        this.setState({ loading: false })\r\n    }\r\n    //two functions one that stakes and one unstakes\r\n    //leverage our decentralBank contract -deposit tokens and unstaking tokens\r\n    //DepositTokens\r\n    //function approve transaction hash\r\n    stakeTokens = (amount) => {\r\n        this.setState({ loading: true })\r\n        this.state.tether.methods.approve(this.state.decentralBank._address, amount).send({ from: this.state.account }).on('transactionHash', (hash) => {\r\n            this.state.decentralBank.methods.depositTokens(amount).send({ from: this.state.account }).on('transactionHash', (hash) => {\r\n                this.setState({ loading: false })\r\n            })\r\n        })\r\n    }\r\n\r\n    unStakeTokens = (amount) => {\r\n        this.setState({ loading: true })\r\n        this.state.decentralBank.methods.unstakeTokens().send({ from: this.state.account }).on('transactionHash', (hash) => {\r\n            this.setState({ loading: false })\r\n        })\r\n    }\r\n\r\n    //Our React Code Goes in here!\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            account: '0x0',\r\n            tether: {},\r\n            rwd: {},\r\n            decentralBank: {},\r\n            tetherBalance: '0',\r\n            rwdBalance: '0',\r\n            stakingBalance: '0',\r\n            loading: 'true'\r\n\r\n        }\r\n    }\r\n    render() {\r\n        let content\r\n        {\r\n            this.state.loading ? content = <p id='loader' className='text-center' style={{ margin: '30px' }}>LOADING.....</p> : content =\r\n                <Main\r\n                    tetherBalance={this.state.tetherBalance}\r\n                    rwdBalance={this.state.rwdBalance}\r\n                    stakingBalance={this.state.stakingBalance}\r\n                    stakeTokens={this.stakeTokens}\r\n                    unstakeTokens={this.unStakeTokens} />\r\n        }\r\n        return (\r\n            <div className='App' style={{ position: 'relative' }}>\r\n                <div style={{ position: 'absolute' }}>\r\n                    <ParticleSettings />\r\n                </div>\r\n                <Navbar account={this.state.account} />\r\n                <div className=\"container-fluid mt-5\">\r\n                    <div className=\"row\">\r\n                        <main role='main' classname='col-lg-12 ml-auto mr-auto' style={{ maxWidth: '600px', minheight: '100vm' }}>\r\n                            <div className=\"container-fluid margin-auto\">\r\n                                {content}\r\n                            </div>\r\n                        </main>\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default App;"]},"metadata":{},"sourceType":"module"}