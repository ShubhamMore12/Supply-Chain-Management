{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\shrav\\\\Downloads\\\\defi-staking-app-starter-main\\\\defi-staking-app-starter\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\shrav\\\\Downloads\\\\defi-staking-app-starter-main\\\\defi-staking-app-starter\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\shrav\\\\Downloads\\\\defi-staking-app-starter-main\\\\defi-staking-app-starter\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\shrav\\\\Downloads\\\\defi-staking-app-starter-main\\\\defi-staking-app-starter\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\shrav\\\\Downloads\\\\defi-staking-app-starter-main\\\\defi-staking-app-starter\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\shrav\\\\Downloads\\\\defi-staking-app-starter-main\\\\defi-staking-app-starter\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"C:\\\\Users\\\\shrav\\\\Downloads\\\\defi-staking-app-starter-main\\\\defi-staking-app-starter\\\\src\\\\components\\\\Airdrop.js\";\nimport React, { Component } from 'react';\n\nvar Airdrop = /*#__PURE__*/function (_Component) {\n  _inherits(Airdrop, _Component);\n\n  //Airdrop to have a timer that counts down the\n  //Hook up to Blockchain\n  function Airdrop() {\n    var _this;\n\n    _classCallCheck(this, Airdrop);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Airdrop).call(this));\n    _this.state = {\n      time: {},\n      seconds: 10\n    };\n    _this.timer = 0;\n    _this.startTimer = _this.startTimer.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.countDown = _this.countDown.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(Airdrop, [{\n    key: \"startTimer\",\n    value: function startTimer() {\n      if (this.timer == 0 && this.state.seconds > 0) {\n        this.timer = setInterval(this.CountDown, 1000);\n      }\n    }\n  }, {\n    key: \"countDown\",\n    value: function countDown() {\n      var seconds = this.setState.seconds - 1;\n      this.setState({\n        time: this.secondsToTime(seconds),\n        seconds: seconds\n      });\n\n      if (seconds == 0) {\n        clearInterval(this.timer);\n      }\n    }\n  }, {\n    key: \"secondsToTime\",\n    value: function secondsToTime(secs) {\n      var hours, seconds, minutes;\n      hours = Math.floor(secs / 3600);\n      minutes = Math.floor(secs % 3600 / 60);\n      seconds = Math.ceil(secs % 60);\n      var obj = {\n        'h': hours,\n        'm': minutes,\n        's': seconds\n      };\n      return obj;\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var timeleftVar = this.secondsToTime(this.state.seconds);\n      this.setState({\n        time: timeleftVar\n      });\n    }\n  }, {\n    key: \"airdropTokens\",\n    value: function airdropTokens() {\n      var staking = this.props.stakingBalance;\n\n      if (staking >= '50000000000000000000') {\n        this.startTimer();\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          color: 'black'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }\n      }, this.state.time.m, \":\", this.state.time.s);\n    }\n  }]);\n\n  return Airdrop;\n}(Component);\n\nexport default Airdrop;","map":{"version":3,"sources":["C:/Users/shrav/Downloads/defi-staking-app-starter-main/defi-staking-app-starter/src/components/Airdrop.js"],"names":["React","Component","Airdrop","state","time","seconds","timer","startTimer","bind","countDown","setInterval","CountDown","setState","secondsToTime","clearInterval","secs","hours","minutes","Math","floor","ceil","obj","timeleftVar","staking","props","stakingBalance","color","m","s"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;IAEMC,O;;;AACF;AACA;AACA,qBAAc;AAAA;;AAAA;;AACV;AACA,UAAKC,KAAL,GAAa;AACTC,MAAAA,IAAI,EAAE,EADG;AAETC,MAAAA,OAAO,EAAE;AAFA,KAAb;AAIA,UAAKC,KAAL,GAAa,CAAb;AACA,UAAKC,UAAL,GAAkB,MAAKA,UAAL,CAAgBC,IAAhB,uDAAlB;AACA,UAAKC,SAAL,GAAiB,MAAKA,SAAL,CAAeD,IAAf,uDAAjB;AARU;AASb;;;;iCAEY;AACT,UAAI,KAAKF,KAAL,IAAc,CAAd,IAAmB,KAAKH,KAAL,CAAWE,OAAX,GAAqB,CAA5C,EAA+C;AAC3C,aAAKC,KAAL,GAAaI,WAAW,CAAC,KAAKC,SAAN,EAAiB,IAAjB,CAAxB;AACH;AACJ;;;gCAEW;AACR,UAAIN,OAAO,GAAG,KAAKO,QAAL,CAAcP,OAAd,GAAwB,CAAtC;AACA,WAAKO,QAAL,CAAc;AACVR,QAAAA,IAAI,EAAE,KAAKS,aAAL,CAAmBR,OAAnB,CADI;AAEVA,QAAAA,OAAO,EAAEA;AAFC,OAAd;;AAIA,UAAIA,OAAO,IAAI,CAAf,EAAkB;AACdS,QAAAA,aAAa,CAAC,KAAKR,KAAN,CAAb;AACH;AACJ;;;kCAEaS,I,EAAM;AAChB,UAAIC,KAAJ,EAAWX,OAAX,EAAoBY,OAApB;AACAD,MAAAA,KAAK,GAAGE,IAAI,CAACC,KAAL,CAAWJ,IAAI,GAAI,IAAnB,CAAR;AACAE,MAAAA,OAAO,GAAGC,IAAI,CAACC,KAAL,CAAYJ,IAAI,GAAI,IAAR,GAAgB,EAA5B,CAAV;AACAV,MAAAA,OAAO,GAAGa,IAAI,CAACE,IAAL,CAAWL,IAAI,GAAG,EAAlB,CAAV;AAEA,UAAIM,GAAG,GAAG;AACN,aAAKL,KADC;AAEN,aAAKC,OAFC;AAGN,aAAKZ;AAHC,OAAV;AAKA,aAAOgB,GAAP;AACH;;;wCAEmB;AAChB,UAAIC,WAAW,GAAG,KAAKT,aAAL,CAAmB,KAAKV,KAAL,CAAWE,OAA9B,CAAlB;AACA,WAAKO,QAAL,CAAc;AAAER,QAAAA,IAAI,EAAEkB;AAAR,OAAd;AACH;;;oCAEe;AACZ,UAAIC,OAAO,GAAG,KAAKC,KAAL,CAAWC,cAAzB;;AACA,UAAIF,OAAO,IAAI,sBAAf,EAAuC;AACnC,aAAKhB,UAAL;AACH;AACJ;;;6BAEQ;AACL,0BACI;AAAK,QAAA,KAAK,EAAE;AAAEmB,UAAAA,KAAK,EAAE;AAAT,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAiC,KAAKvB,KAAL,CAAWC,IAAX,CAAgBuB,CAAjD,OAAqD,KAAKxB,KAAL,CAAWC,IAAX,CAAgBwB,CAArE,CADJ;AAKH;;;;EA/DiB3B,S;;AAkEtB,eAAeC,OAAf","sourcesContent":["import React, { Component } from 'react'\r\n\r\nclass Airdrop extends Component {\r\n    //Airdrop to have a timer that counts down the\r\n    //Hook up to Blockchain\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            time: {},\r\n            seconds: 10\r\n        };\r\n        this.timer = 0;\r\n        this.startTimer = this.startTimer.bind(this);\r\n        this.countDown = this.countDown.bind(this);\r\n    }\r\n\r\n    startTimer() {\r\n        if (this.timer == 0 && this.state.seconds > 0) {\r\n            this.timer = setInterval(this.CountDown, 1000)\r\n        }\r\n    }\r\n\r\n    countDown() {\r\n        let seconds = this.setState.seconds - 1\r\n        this.setState({\r\n            time: this.secondsToTime(seconds),\r\n            seconds: seconds\r\n        })\r\n        if (seconds == 0) {\r\n            clearInterval(this.timer)\r\n        }\r\n    }\r\n\r\n    secondsToTime(secs) {\r\n        let hours, seconds, minutes\r\n        hours = Math.floor(secs / (3600))\r\n        minutes = Math.floor((secs % (3600) / 60))\r\n        seconds = Math.ceil((secs % 60))\r\n\r\n        let obj = {\r\n            'h': hours,\r\n            'm': minutes,\r\n            's': seconds\r\n        }\r\n        return obj\r\n    }\r\n\r\n    componentDidMount() {\r\n        let timeleftVar = this.secondsToTime(this.state.seconds)\r\n        this.setState({ time: timeleftVar })\r\n    }\r\n\r\n    airdropTokens() {\r\n        let staking = this.props.stakingBalance\r\n        if (staking >= '50000000000000000000') {\r\n            this.startTimer()\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div style={{ color: 'black' }}>{this.state.time.m}:{this.state.time.s}\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Airdrop;"]},"metadata":{},"sourceType":"module"}